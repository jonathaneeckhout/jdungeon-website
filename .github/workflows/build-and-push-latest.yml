name: build and push the latest docker image
on: [push]

env:
  GODOT_VERSION: "4.1"
  EXPORT_NAME: Jdungeon-client
  PROJECT_PATH: ./

jobs:
  build-client-linux:
    name: Client Linux Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: jonathaneeckhout/jdungeon-client
          ref: v0.0.2
          token: ${{ github.token }}
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          cd $PROJECT_PATH
          godot -v --headless --export-release "Linux/X11" build/linux/$EXPORT_NAME.x86_64
      - name: Add config
        run: |
          touch build/linux/.env
          echo "DEBUG=false" >> build/linux/.env
          echo "COMMON_SERVER_ADDRESS=${{ vars.COMMON_SERVER_ADDRESS }}" >> build/linux/.env
          echo "COMMON_SERVER_HOST=${{ vars.COMMON_SERVER_HOST }}" >> build/linux/.env
          echo "COMMON_SERVER_PORT=${{ vars.COMMON_SERVER_PORT }}" >> build/linux/.env
      - name: Upload Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: jdungeon-client-linux
          path: build/linux
  build-client-windows:
    name: Client Windows Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: jonathaneeckhout/jdungeon-client
          ref: v0.0.2
          token: ${{ github.token }}
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          cd $PROJECT_PATH
          godot -v --headless --export-release "Windows Desktop" build/windows/$EXPORT_NAME.exe
      - name: Add config
        run: |
          touch build/windows/.env
          echo "DEBUG=false" >> build/windows/.env
          echo "COMMON_SERVER_ADDRESS=${{ vars.COMMON_SERVER_ADDRESS }}" >> build/windows/.env
          echo "COMMON_SERVER_HOST=${{ vars.COMMON_SERVER_HOST }}" >> build/windows/.env
          echo "COMMON_SERVER_PORT=${{ vars.COMMON_SERVER_PORT }}" >> build/windows/.env
      - name: Upload Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: jdungeon-client-windows
          path: build/windows
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: [build-client-linux, build-client-windows]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Download Linux artifacts
        uses: actions/download-artifact@v3
        with:
          name: jdungeon-client-linux
          path: public/images/linux
      - name: Zip linux client
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r public/images/jdungeon-client-linux.zip public/images/linux
      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: jdungeon-client-windows
          path: public/images/windows
      - name: Zip windows client
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r public/images/jdungeon-client-windows.zip public/images/windows
      - name: Check out images
        run: |
          ls -al
          ls -al public/images
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: mawakajaka/jdungeon-website
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}